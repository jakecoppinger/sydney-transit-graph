/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const Square = t.iface([], {
  "size": "number",
  "color": t.opt("string"),
});

export const RoutePointInterface = t.iface([], {
  "shape_id": "string",
  "shape_pt_lat": "number",
  "shape_pt_lon": "number",
  "shape_pt_sequence": "number",
  "shape_dist_traveled": "number",
});

export const RouteCSVInterface = t.iface([], {
  "shape_id": "string",
  "shape_pt_lat": "string",
  "shape_pt_lon": "string",
  "shape_pt_sequence": "string",
  "shape_dist_traveled": "string",
});

export const BusProgressWaypointInterface = t.iface([], {
  "id": "string",
  "timestamp": "number",
  "progress": "number",
  "occupancy_status": "number",
  "latitude": "number",
  "longitude": "number",
});

export const RawBusUpdatePositionInterface = t.iface([], {
  "latitude": "number",
  "longitude": "number",
  "bearing": "number",
  "odometer": "number",
  "speed": "number",
});

export const RawBusUpdateInterface = t.iface([], {
  "id": "string",
  "is_deleted": "boolean",
  "trip_update": "any",
  "vehicle": t.iface([], {
    "trip": t.iface([], {
      "trip_id": "string",
      "route_id": "string",
      "direction_id": "number",
      "start_time": "string",
      "start_date": "string",
      "schedule_relationship": "number",
    }),
    "vehicle": t.iface([], {
      "id": "string",
      "label": "string",
      "license_plate": "string",
    }),
    "position": t.union("RawBusUpdatePositionInterface", "null"),
    "current_stop_sequence": "number",
    "stop_id": "string",
    "current_status": "number",
    "timestamp": "number",
    "congestion_level": "number",
    "occupancy_status": "number",
  }),
  "alert": "any",
});

const exportedTypeSuite: t.ITypeSuite = {
  Square,
  RoutePointInterface,
  RouteCSVInterface,
  BusProgressWaypointInterface,
  RawBusUpdatePositionInterface,
  RawBusUpdateInterface,
};
export default exportedTypeSuite;
